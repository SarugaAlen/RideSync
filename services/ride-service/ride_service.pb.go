// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.1
// source: proto/ride_service.proto

package rideservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRideRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	StartLocation string                 `protobuf:"bytes,2,opt,name=start_location,json=startLocation,proto3" json:"start_location,omitempty"`
	EndLocation   string                 `protobuf:"bytes,3,opt,name=end_location,json=endLocation,proto3" json:"end_location,omitempty"`
	PassengerIds  []string               `protobuf:"bytes,4,rep,name=passenger_ids,json=passengerIds,proto3" json:"passenger_ids,omitempty"`
	DateTime      string                 `protobuf:"bytes,5,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRideRequest) Reset() {
	*x = CreateRideRequest{}
	mi := &file_proto_ride_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRideRequest) ProtoMessage() {}

func (x *CreateRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRideRequest.ProtoReflect.Descriptor instead.
func (*CreateRideRequest) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRideRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *CreateRideRequest) GetStartLocation() string {
	if x != nil {
		return x.StartLocation
	}
	return ""
}

func (x *CreateRideRequest) GetEndLocation() string {
	if x != nil {
		return x.EndLocation
	}
	return ""
}

func (x *CreateRideRequest) GetPassengerIds() []string {
	if x != nil {
		return x.PassengerIds
	}
	return nil
}

func (x *CreateRideRequest) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

type CreateRideResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRideResponse) Reset() {
	*x = CreateRideResponse{}
	mi := &file_proto_ride_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRideResponse) ProtoMessage() {}

func (x *CreateRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRideResponse.ProtoReflect.Descriptor instead.
func (*CreateRideResponse) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRideResponse) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

type GetRideRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRideRequest) Reset() {
	*x = GetRideRequest{}
	mi := &file_proto_ride_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRideRequest) ProtoMessage() {}

func (x *GetRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRideRequest.ProtoReflect.Descriptor instead.
func (*GetRideRequest) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetRideRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

type GetRideResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	StartLocation string                 `protobuf:"bytes,3,opt,name=start_location,json=startLocation,proto3" json:"start_location,omitempty"`
	EndLocation   string                 `protobuf:"bytes,4,opt,name=end_location,json=endLocation,proto3" json:"end_location,omitempty"`
	PassengerIds  []string               `protobuf:"bytes,5,rep,name=passenger_ids,json=passengerIds,proto3" json:"passenger_ids,omitempty"`
	DateTime      string                 `protobuf:"bytes,6,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRideResponse) Reset() {
	*x = GetRideResponse{}
	mi := &file_proto_ride_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRideResponse) ProtoMessage() {}

func (x *GetRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRideResponse.ProtoReflect.Descriptor instead.
func (*GetRideResponse) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetRideResponse) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *GetRideResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *GetRideResponse) GetStartLocation() string {
	if x != nil {
		return x.StartLocation
	}
	return ""
}

func (x *GetRideResponse) GetEndLocation() string {
	if x != nil {
		return x.EndLocation
	}
	return ""
}

func (x *GetRideResponse) GetPassengerIds() []string {
	if x != nil {
		return x.PassengerIds
	}
	return nil
}

func (x *GetRideResponse) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

func (x *GetRideResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListRidesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriverId      string                 `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRidesRequest) Reset() {
	*x = ListRidesRequest{}
	mi := &file_proto_ride_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRidesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRidesRequest) ProtoMessage() {}

func (x *ListRidesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRidesRequest.ProtoReflect.Descriptor instead.
func (*ListRidesRequest) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListRidesRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type ListRidesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rides         []*GetRideResponse     `protobuf:"bytes,1,rep,name=rides,proto3" json:"rides,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRidesResponse) Reset() {
	*x = ListRidesResponse{}
	mi := &file_proto_ride_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRidesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRidesResponse) ProtoMessage() {}

func (x *ListRidesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRidesResponse.ProtoReflect.Descriptor instead.
func (*ListRidesResponse) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListRidesResponse) GetRides() []*GetRideResponse {
	if x != nil {
		return x.Rides
	}
	return nil
}

type UpdateRideRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	StartLocation string                 `protobuf:"bytes,3,opt,name=start_location,json=startLocation,proto3" json:"start_location,omitempty"`
	EndLocation   string                 `protobuf:"bytes,4,opt,name=end_location,json=endLocation,proto3" json:"end_location,omitempty"`
	PassengerIds  []string               `protobuf:"bytes,5,rep,name=passenger_ids,json=passengerIds,proto3" json:"passenger_ids,omitempty"`
	DateTime      string                 `protobuf:"bytes,6,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRideRequest) Reset() {
	*x = UpdateRideRequest{}
	mi := &file_proto_ride_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRideRequest) ProtoMessage() {}

func (x *UpdateRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRideRequest.ProtoReflect.Descriptor instead.
func (*UpdateRideRequest) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRideRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *UpdateRideRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *UpdateRideRequest) GetStartLocation() string {
	if x != nil {
		return x.StartLocation
	}
	return ""
}

func (x *UpdateRideRequest) GetEndLocation() string {
	if x != nil {
		return x.EndLocation
	}
	return ""
}

func (x *UpdateRideRequest) GetPassengerIds() []string {
	if x != nil {
		return x.PassengerIds
	}
	return nil
}

func (x *UpdateRideRequest) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

func (x *UpdateRideRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateRideResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRideResponse) Reset() {
	*x = UpdateRideResponse{}
	mi := &file_proto_ride_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRideResponse) ProtoMessage() {}

func (x *UpdateRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRideResponse.ProtoReflect.Descriptor instead.
func (*UpdateRideResponse) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateRideResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteRideRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRideRequest) Reset() {
	*x = DeleteRideRequest{}
	mi := &file_proto_ride_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRideRequest) ProtoMessage() {}

func (x *DeleteRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRideRequest.ProtoReflect.Descriptor instead.
func (*DeleteRideRequest) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRideRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

type DeleteRideResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRideResponse) Reset() {
	*x = DeleteRideResponse{}
	mi := &file_proto_ride_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRideResponse) ProtoMessage() {}

func (x *DeleteRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRideResponse.ProtoReflect.Descriptor instead.
func (*DeleteRideResponse) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteRideResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FindRidesByLocationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartLocation string                 `protobuf:"bytes,1,opt,name=start_location,json=startLocation,proto3" json:"start_location,omitempty"`
	EndLocation   string                 `protobuf:"bytes,2,opt,name=end_location,json=endLocation,proto3" json:"end_location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindRidesByLocationRequest) Reset() {
	*x = FindRidesByLocationRequest{}
	mi := &file_proto_ride_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindRidesByLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRidesByLocationRequest) ProtoMessage() {}

func (x *FindRidesByLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRidesByLocationRequest.ProtoReflect.Descriptor instead.
func (*FindRidesByLocationRequest) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{10}
}

func (x *FindRidesByLocationRequest) GetStartLocation() string {
	if x != nil {
		return x.StartLocation
	}
	return ""
}

func (x *FindRidesByLocationRequest) GetEndLocation() string {
	if x != nil {
		return x.EndLocation
	}
	return ""
}

type FindRidesByLocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rides         []*GetRideResponse     `protobuf:"bytes,1,rep,name=rides,proto3" json:"rides,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindRidesByLocationResponse) Reset() {
	*x = FindRidesByLocationResponse{}
	mi := &file_proto_ride_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindRidesByLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRidesByLocationResponse) ProtoMessage() {}

func (x *FindRidesByLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRidesByLocationResponse.ProtoReflect.Descriptor instead.
func (*FindRidesByLocationResponse) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{11}
}

func (x *FindRidesByLocationResponse) GetRides() []*GetRideResponse {
	if x != nil {
		return x.Rides
	}
	return nil
}

type JoinRideRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	PassengerId   string                 `protobuf:"bytes,2,opt,name=passenger_id,json=passengerId,proto3" json:"passenger_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRideRequest) Reset() {
	*x = JoinRideRequest{}
	mi := &file_proto_ride_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRideRequest) ProtoMessage() {}

func (x *JoinRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRideRequest.ProtoReflect.Descriptor instead.
func (*JoinRideRequest) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{12}
}

func (x *JoinRideRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *JoinRideRequest) GetPassengerId() string {
	if x != nil {
		return x.PassengerId
	}
	return ""
}

type JoinRideResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRideResponse) Reset() {
	*x = JoinRideResponse{}
	mi := &file_proto_ride_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRideResponse) ProtoMessage() {}

func (x *JoinRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRideResponse.ProtoReflect.Descriptor instead.
func (*JoinRideResponse) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{13}
}

func (x *JoinRideResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LeaveRideRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	PassengerId   string                 `protobuf:"bytes,2,opt,name=passenger_id,json=passengerId,proto3" json:"passenger_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRideRequest) Reset() {
	*x = LeaveRideRequest{}
	mi := &file_proto_ride_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRideRequest) ProtoMessage() {}

func (x *LeaveRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRideRequest.ProtoReflect.Descriptor instead.
func (*LeaveRideRequest) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{14}
}

func (x *LeaveRideRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *LeaveRideRequest) GetPassengerId() string {
	if x != nil {
		return x.PassengerId
	}
	return ""
}

type LeaveRideResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRideResponse) Reset() {
	*x = LeaveRideResponse{}
	mi := &file_proto_ride_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRideResponse) ProtoMessage() {}

func (x *LeaveRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRideResponse.ProtoReflect.Descriptor instead.
func (*LeaveRideResponse) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{15}
}

func (x *LeaveRideResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ChangeRideStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RideId        string                 `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeRideStatusRequest) Reset() {
	*x = ChangeRideStatusRequest{}
	mi := &file_proto_ride_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeRideStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRideStatusRequest) ProtoMessage() {}

func (x *ChangeRideStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRideStatusRequest.ProtoReflect.Descriptor instead.
func (*ChangeRideStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{16}
}

func (x *ChangeRideStatusRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *ChangeRideStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ChangeRideStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeRideStatusResponse) Reset() {
	*x = ChangeRideStatusResponse{}
	mi := &file_proto_ride_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeRideStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRideStatusResponse) ProtoMessage() {}

func (x *ChangeRideStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ride_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRideStatusResponse.ProtoReflect.Descriptor instead.
func (*ChangeRideStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_ride_service_proto_rawDescGZIP(), []int{17}
}

func (x *ChangeRideStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_ride_service_proto protoreflect.FileDescriptor

var file_proto_ride_service_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x69, 0x64, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x69, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64,
	0x22, 0xeb, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x69, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x47, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x69, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x05, 0x72, 0x69, 0x64, 0x65, 0x73, 0x22, 0xed, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x66, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x69,
	0x64, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x51,
	0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x69, 0x64, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x05, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72,
	0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x69,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x72, 0x69, 0x64, 0x65,
	0x73, 0x22, 0x4d, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x2c, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4e,
	0x0a, 0x10, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d,
	0x0a, 0x11, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4a, 0x0a,
	0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32,
	0xec, 0x05, 0x0a, 0x0b, 0x52, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x12, 0x1e, 0x2e,
	0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x69, 0x64, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x69, 0x64, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x69, 0x64, 0x65,
	0x73, 0x12, 0x1d, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x69, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x69, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x12, 0x1e,
	0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x12, 0x1e, 0x2e,
	0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68,
	0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x69, 0x64, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x69, 0x64, 0x65, 0x73, 0x42, 0x79, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x52, 0x69, 0x64, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x69, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x69, 0x64, 0x65, 0x12, 0x1d,
	0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a,
	0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x24, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x69, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x30,
	0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x65,
	0x6e, 0x73, 0x61, 0x72, 0x75, 0x67, 0x61, 0x2f, 0x72, 0x69, 0x64, 0x65, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x3b, 0x72, 0x69, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_ride_service_proto_rawDescOnce sync.Once
	file_proto_ride_service_proto_rawDescData []byte
)

func file_proto_ride_service_proto_rawDescGZIP() []byte {
	file_proto_ride_service_proto_rawDescOnce.Do(func() {
		file_proto_ride_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_ride_service_proto_rawDesc), len(file_proto_ride_service_proto_rawDesc)))
	})
	return file_proto_ride_service_proto_rawDescData
}

var file_proto_ride_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_ride_service_proto_goTypes = []any{
	(*CreateRideRequest)(nil),           // 0: rideservice.CreateRideRequest
	(*CreateRideResponse)(nil),          // 1: rideservice.CreateRideResponse
	(*GetRideRequest)(nil),              // 2: rideservice.GetRideRequest
	(*GetRideResponse)(nil),             // 3: rideservice.GetRideResponse
	(*ListRidesRequest)(nil),            // 4: rideservice.ListRidesRequest
	(*ListRidesResponse)(nil),           // 5: rideservice.ListRidesResponse
	(*UpdateRideRequest)(nil),           // 6: rideservice.UpdateRideRequest
	(*UpdateRideResponse)(nil),          // 7: rideservice.UpdateRideResponse
	(*DeleteRideRequest)(nil),           // 8: rideservice.DeleteRideRequest
	(*DeleteRideResponse)(nil),          // 9: rideservice.DeleteRideResponse
	(*FindRidesByLocationRequest)(nil),  // 10: rideservice.FindRidesByLocationRequest
	(*FindRidesByLocationResponse)(nil), // 11: rideservice.FindRidesByLocationResponse
	(*JoinRideRequest)(nil),             // 12: rideservice.JoinRideRequest
	(*JoinRideResponse)(nil),            // 13: rideservice.JoinRideResponse
	(*LeaveRideRequest)(nil),            // 14: rideservice.LeaveRideRequest
	(*LeaveRideResponse)(nil),           // 15: rideservice.LeaveRideResponse
	(*ChangeRideStatusRequest)(nil),     // 16: rideservice.ChangeRideStatusRequest
	(*ChangeRideStatusResponse)(nil),    // 17: rideservice.ChangeRideStatusResponse
}
var file_proto_ride_service_proto_depIdxs = []int32{
	3,  // 0: rideservice.ListRidesResponse.rides:type_name -> rideservice.GetRideResponse
	3,  // 1: rideservice.FindRidesByLocationResponse.rides:type_name -> rideservice.GetRideResponse
	0,  // 2: rideservice.RideService.CreateRide:input_type -> rideservice.CreateRideRequest
	2,  // 3: rideservice.RideService.GetRide:input_type -> rideservice.GetRideRequest
	4,  // 4: rideservice.RideService.ListRides:input_type -> rideservice.ListRidesRequest
	6,  // 5: rideservice.RideService.UpdateRide:input_type -> rideservice.UpdateRideRequest
	8,  // 6: rideservice.RideService.DeleteRide:input_type -> rideservice.DeleteRideRequest
	10, // 7: rideservice.RideService.FindRidesByLocation:input_type -> rideservice.FindRidesByLocationRequest
	12, // 8: rideservice.RideService.JoinRide:input_type -> rideservice.JoinRideRequest
	14, // 9: rideservice.RideService.LeaveRide:input_type -> rideservice.LeaveRideRequest
	16, // 10: rideservice.RideService.ChangeRideStatus:input_type -> rideservice.ChangeRideStatusRequest
	1,  // 11: rideservice.RideService.CreateRide:output_type -> rideservice.CreateRideResponse
	3,  // 12: rideservice.RideService.GetRide:output_type -> rideservice.GetRideResponse
	5,  // 13: rideservice.RideService.ListRides:output_type -> rideservice.ListRidesResponse
	7,  // 14: rideservice.RideService.UpdateRide:output_type -> rideservice.UpdateRideResponse
	9,  // 15: rideservice.RideService.DeleteRide:output_type -> rideservice.DeleteRideResponse
	11, // 16: rideservice.RideService.FindRidesByLocation:output_type -> rideservice.FindRidesByLocationResponse
	13, // 17: rideservice.RideService.JoinRide:output_type -> rideservice.JoinRideResponse
	15, // 18: rideservice.RideService.LeaveRide:output_type -> rideservice.LeaveRideResponse
	17, // 19: rideservice.RideService.ChangeRideStatus:output_type -> rideservice.ChangeRideStatusResponse
	11, // [11:20] is the sub-list for method output_type
	2,  // [2:11] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_proto_ride_service_proto_init() }
func file_proto_ride_service_proto_init() {
	if File_proto_ride_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_ride_service_proto_rawDesc), len(file_proto_ride_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_ride_service_proto_goTypes,
		DependencyIndexes: file_proto_ride_service_proto_depIdxs,
		MessageInfos:      file_proto_ride_service_proto_msgTypes,
	}.Build()
	File_proto_ride_service_proto = out.File
	file_proto_ride_service_proto_goTypes = nil
	file_proto_ride_service_proto_depIdxs = nil
}
